/*
	Arquivo FCL do projeto 3 da disciplina Inteligencia Artificial
*/

FUNCTION_BLOCK cannon	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	dx : REAL;
	dy : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	Velocidade : REAL;
	Angulo : REAL;
END_VAR

FUZZIFY dx		// Fuzzify input variable 'dx': {'muitoPerto', 'perto', 'longe' , 'muitoLonge'}
	TERM muitoPerto := (0, 1) (25, 1) (62.5,0) ; 
	TERM perto := (37.5, 0) (75,1) (112.5,0);
	TERM longe := (87.5, 0) (125, 1) (162.5,0);
	TERM muitoLonge := (137.5, 0) (175,1) (200, 1);
END_FUZZIFY

FUZZIFY dy			// Fuzzify input variable 'dy': { 'muitoBaixo', 'baixo', 'alto', 'muitoAlto' }
	TERM muitoBaixo := (0, 1) (12.5, 1) (31.2,0) ;
	TERM baixo := (18.7,0) (37.5,1) (56.2,0);
	TERM alto := (43.7,0) (62.5,1) (81.2,0);
	TERM muitoAlto := (68.7,0) (87.5,1) (100,1);
END_FUZZIFY

DEFUZZIFY Velocidade			// Defuzzify output variable 'velocidade' : {'lenta', 'normal', 'rapida' }
	TERM lenta := (0,1) (15,1) (37.5,0);
	TERM normal := (22.5,0) (45,1) (67.5,0);
	TERM rapida := (52.5,0) (75,1) (90,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY Angulo			// Defuzzify output variable 'angulo' : {'fechado', 'medio', 'aberto' }
	TERM fechado := (0,1) (15,1) (37.5,0);
	TERM medio := (22.5,0) (45,1) (67.5,0);
	TERM aberto := (52.5,0) (75,1) (90,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF dx IS muitoPerto THEN Velocidade IS lenta;
	RULE 2 : IF dx IS perto OR dx IS longe THEN Velocidade IS normal; 
	RULE 3 : IF dx IS muitoLonge THEN Velocidade IS rapida;
	RULE 4 : IF dy IS muitoAlto THEN Angulo IS fechado;
	RULE 5 : IF dy IS alto OR dy IS baixo THEN Angulo IS medio;
	RULE 6 : IF dy IS muitoBaixo THEN Angulo IS aberto;
END_RULEBLOCK

END_FUNCTION_BLOCK
