/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates tip based on 'servie' and 'food'

	If you want to about this example (and fuzzy logic), please 
	read Matlab's tutorial on fuzzy logic toolbox 
	http://www.mathworks.com/access/helpdesk/help/pdf_doc/fuzzy/fuzzy.pdf

									Pablo Cingolani 
									pcingola@users.sourceforge.net
*/

FUNCTION_BLOCK cannon	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	dx : REAL;
	dy : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	Velocidade : REAL;
	Angulo : REAL;
END_VAR

FUZZIFY dx		// Fuzzify input variable 'dx': {'muitoPerto', 'perto', 'longe' , 'muitoLonge'}
	TERM muitoPerto := (0, 1) (50, 1) (75,0) ; 
	TERM perto := (70, 0) (100,1) (130,0);
	TERM longe := (125, 0) (150, 1) (180,0);
	TERM muitoLonge := (175, 0) (200, 1);
END_FUZZIFY

FUZZIFY dy			// Fuzzify input variable 'dy': { 'muitoBaixo', 'baixo', 'alto', 'muitoAlto' }
	TERM muitoBaixo := (0, 1) (25, 1) (37.5,0) ;
	TERM baixo := (35,0) (50,1) (62.5,0);
	TERM alto := (60,0) (75,1) (87.5,0);
	TERM muitoAlto := (85,0) (100,1);
END_FUZZIFY

DEFUZZIFY Velocidade			// Defuzzify output variable 'velocidade' : {'lenta', 'normal', 'rapida' }
	TERM lenta := (0,1) (20,1) (30,0);
	TERM normal := (27,0) (40,1) (60,0);
	TERM rapida := (57,0) (70,1) (80,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY Angulo			// Defuzzify output variable 'angulo' : {'fechado', 'medio', 'aberto' }
	TERM fechado := (0,1) (22.5,1) (34,0);
	TERM medio := (32,0) (45,1) (67.5,0);
	TERM aberto := (65.5,0) (79,1) (90,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF dx IS muitoPerto OR dy IS muitoBaixo THEN Velocidade IS normal;
	RULE 2 : IF dx IS muitoLonge THEN Velocidade IS lenta; 
	RULE 3 : IF dy IS muitoAlto THEN Angulo IS fechado;
	RULE 3 : IF dx IS perto AND dy IS alto THEN Angulo IS fechado;
END_RULEBLOCK

END_FUNCTION_BLOCK
